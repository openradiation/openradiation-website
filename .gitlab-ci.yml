stages:
  - install
  - test
  - analyse
  - build
  - publish
  - deploy

variables:
  IMAGE_NAME: backend
  MAVEN_OPTS: "-Dhttps.protocols=TLSv1.2 -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"
  MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true"

Composer:
  stage: install
  image: composer:latest
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - src/public/bundles/
      - src/vendor/
      - src/bin/
  variables:
    COMPOSER_ALLOW_SUPERUSER: "1"
  script:
    - composer install  --optimize-autoloader --no-interaction --no-scripts

# Unit:
#   stage: test
#   image: $DOCKER_REGISTRY/digital-factory/gitlab/php-quality-tools:alpine
#   cache:
#     key: ${CI_COMMIT_REF_SLUG}
#     paths:
#       - src/public/bundles/
#       - src/vendor/
#       - src/bin/
#   script:
#     - phpunit ./src/
#   except:
#     refs:
#       - master

#PHP Mess Detector:
# stage: test
#  image: $DOCKER_REGISTRY/digital-factory/gitlab/php-quality-tools:alpine
#  cache:
#    key: ${CI_COMMIT_REF_SLUG}
#    paths:
#      - src/public/bundles/
#      - src/vendor/
#      - src/bin/
#      - reports/
#  before_script:
#    - mkdir -p reports
#  script:
#    - phpmd . xml codesize --exclude 'vendor' --reportfile 'reports/phpmd-report.xml' --ignore-violations-on-exit
#  except:
#    refs:
#      - master

Sonar:
  extends: .sonar-publish
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    policy: pull
    paths:
      - src/public/bundles/
      - src/vendor/
      - src/bin/
  script:
    - gitlab-sonar-scanner

Preview:
  extends: .sonar-preview
  allow_failure: true
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    policy: pull
    paths:
      - src/public/bundles/
      - src/vendor/
      - src/bin/

Socle:php-fpm:
  stage: build
  extends: .docker-publish
  variables:
    IMAGE_NAME: backend-socle
    build_context: php/
    build_args: --build-arg php_version=7.2-fpm-alpine-nginx-latest
  only:
    changes:
      - php/**/*

Database:
  stage: publish
  extends: .docker-publish
  variables:
    IMAGE_NAME: backend-database
    build_context: database/
    build_args: --build-arg db_version=mysql:5.6
  only:
    refs:
      - web
    changes:
      - database/**/*

Backend:
  stage: publish
  extends: .docker-publish
  artifacts:
    name: $IMAGE_NAME-$CI_COMMIT_REF_SLUG
    paths:
      - $IMAGE_NAME-$CI_COMMIT_REF_SLUG.tar
  script:
    - echo "FROM $DOCKER_REGISTRY/$IMAGE_NAMESPACE/${IMAGE_NAME}-socle:$CI_COMMIT_REF_SLUG"
      |
      docker build --rm
      -f -
      -t $DOCKER_REGISTRY/$IMAGE_NAMESPACE/$IMAGE_NAME:$CI_COMMIT_REF_SLUG .
  after_script:
    - docker save --output $IMAGE_NAME-$CI_COMMIT_REF_SLUG.tar $DOCKER_REGISTRY/$IMAGE_NAMESPACE/$IMAGE_NAME:$CI_COMMIT_REF_SLUG
    - docker push $DOCKER_REGISTRY/$IMAGE_NAMESPACE/$IMAGE_NAME:$CI_COMMIT_REF_SLUG
    - docker rmi $DOCKER_REGISTRY/$IMAGE_NAMESPACE/$IMAGE_NAME:$CI_COMMIT_REF_SLUG


include:
  - project: 'irsn/sirse/openradiation/openradiation-deploiement'
    ref: master
    file: '.gitlab-cd.yml'

