// CDN Bootstrap
<!-- Latest compiled and minified CSS -->
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap.min.css">

<!-- Optional theme -->
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap-theme.min.css">

<!-- jQuery (necessary for Bootstrap JavaScript plugins) -->
<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>

<!-- Latest compiled and minified JavaScript -->
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.2.0/js/bootstrap.min.js"></script>



// GRID http://getbootstrap.com/css/#grid
// voir tous les exemples : http://getbootstrap.com/examples/grid/

// Extra small devices (phones, less than 768px)
// No media query since this is the default in Bootstrap
// sm - Small devices (tablets, 768px and up)
@media (min-width: 768px) {}
// md - Medium devices (desktops, 992px and up)
@media (min-width: 992px) {}
// lg - Large devices (large desktops, 1200px and up)
@media (min-width: 1200px) {}

// Specific device target
// xs only
@media (max-width: 767px) {}
// sm only
@media (min-width: 768px) and (max-width: 991px) {}
// md only
@media (min-width: 992px) and (max-width: 1199px) {}


// custom breakpoint - mobile landscape
@media (min-width: 480px) and (max-width: 767px) {}


// TIPS HTML
// Column clearing quand on est dans la même ROW !!!! => http://getbootstrap.com/css/#grid-responsive-resets
<!-- Add the extra clearfix for only the required viewport -->
<div class="clearfix visible-xs-block"></div>

// Pas oublier de faire aussi des resets : Offset, push, and pull resets
// car on est mobile FIRST si offset sur SM col-md-offset-2 ; il est appliqué aussi sur LG, faut alors mettre col-lg-offset-0




// mixin intéressant à noter

// Définir un container
// reviens à mettre la class .container dans le HTML
// voir ../assets/stylesheets/bootstrap/_grid.scss ligne 10
// voir aussi https://github.com/twbs/bootstrap-sass/issues/739
.myClass {
    @include container-fixed;
    @media (min-width: $screen-sm-min) {
        width: $container-sm;
    }
    @media (min-width: $screen-md-min) {
        width: $container-md;
    }
    @media (min-width: $screen-lg-min) {
        width: $container-lg;
    }
}

// make as container, via custom mixin in base/_a_mixins.scss
@include make-container;

// Définir une ROW
// reviens à mettre la class .row dans le HTML
// voir ../assets/stylesheets/bootstrap/_grid.scss ligne 39
.myClass {
	@include make-row;
}

// Définir le nombre de colonnes pour tablet, etc .... d'une ROW
// voir ../assets/stylesheets/bootstrap/mixins/_grid.scss
// idem pour xs sm md lg
// .col-sm-3
@include make-sm-column(3);


// Offsetting columns
// http://getbootstrap.com/css/#grid-offsetting
// .col-sm-offset-3
@include make-sm-column-offset(3);


// Column ordering
// http://getbootstrap.com/css/#grid-column-ordering
// .col-md-9 .col-md-push-3 => la première dans le code, se retrouve affichée en dernier
@include make-md-column(9);
@include make-sm-column-push(3);

// .col-md-3 .col-md-pull-9 => la deuxième dans le code, se retrouve affichée en premier
@include make-md-column(3);
@include make-md-column-pull(9);




@mixin navbar-vertical-align($element-height) {
  margin-top: (($navbar-height - $element-height) / 2);
  margin-bottom: (($navbar-height - $element-height) / 2);
}



// Border Radius ../assets/stylesheets/bootstrap/mixins/_border-radius.scss
.myclass {
	@include border-top-radius(2px);
	@include border-right-radius(2px);
	@include border-bottom-radius(2px);
	@include border-left-radius(2px);
}


